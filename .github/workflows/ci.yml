## 1 워크플로의 이름 지정
#name: CI
#
## 2 워크플로가 시작될 조건 지정
#on:
#  push:
#    branches: [ main ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest # 3 실행 환경 지정
#    #4 실행스텝지정
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: '17'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew clean build
name: CI

on:
  push:
    branches: [ main, develop, "feature/**" ]
  pull_request:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  nextjs-ci:
    name: Node ${{ matrix.node }} • CI
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20, 22] # Next.js 권장 LTS 포함

    env:
      CI: "true"
      NEXT_TELEMETRY_DISABLED: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Lint (if present)
        run: npm run lint --if-present

      - name: Type check (if present)
        run: npm run typecheck --if-present
        # 예: package.json에 "typecheck": "tsc --noEmit" 스크립트 추가

      - name: Test (if present)
        run: npm test --if-present -- --ci

      - name: Build
        run: npm run build
